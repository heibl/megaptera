taxblock = FALSE){
if (class(x) == "alignment")
stop ("Sequence alignment must be of class 'DNAbin'")
str2cha <- function(x){unlist(strsplit(x, ""))}
if ( inherits(x, "DNAbin") ) datatype <- "dna"
if (class(x) == "dist") datatype <- "distances"
if (class(x) == "data.frame") datatype <- "standard"
missing <- ifelse( as.raw(2) %in% x, "?", "N")
nchar <- ncol(x)
if ( datatype == "distances" ){
ntax <- attr(x, "Size")
taxnames <- labels(x)
} else {
ntax <- nrow(x)
taxnames <- rownames(x)
}
header <- c("#NEXUS",
paste("\n[created by ips on ", date(), "]\n", sep = ""))
# TAXA BLOCK
# -----------------
if (taxblock){
tb <- c("begin taxa;",
paste("\tdimensions ntax=", ntax,";", sep = ""),
"\ttaxlabels",
paste("\t", taxnames, sep = ""), ";\n")
}
# adding whitespace to taxonnames to equal string length
# ------------------------------------------------------
ws <- nchar(taxnames)
ws <- max(ws) - ws
ws <- lapply(ws, function(x) paste(rep(" ", x), collapse = ""))
taxnames <- paste(taxnames, ws, sep = "")
# indices of partitions
# ---------------------
int <- ifelse(is.numeric(interleave), " interleave", "")
pt <- seq(from = 1, to = nchar, by = interleave)
pt <- data.frame(from = pt, to = c(pt[-1] - 1, nchar))
# assemble matrix
# ---------------
m <- as.character(x)
m <- apply(m, 1, paste, collapse = "")
m <- apply(pt, 1, function(m, i) substr(m, i[1], i[2]), m = m)
m <- as.vector(m)
m <- paste(rep(taxnames, nrow(pt)), unlist(m))
m <- c("matrix", m, ";\nend;")
# write DATA BLOCK
# -----------------
if ( datatype == "dna" || datatype == "standard" ){
if ( datatype == "standard" && !identical(x[1, 1], round(x[1, 1])) )
datatype <- "continuous"
if ( !datatype == "standard" ){
dt <- datatype
} else {
dt <- paste(datatype, " symbols=\"",
paste(unique(unlist(x)), collapse = " "), "\"",
sep = "")
}
data <- ifelse(taxblock, "characters", "data")
# assemble DATA BLOCK
# -------------------
db <- c(paste("begin ", data, ";", sep = ""),
paste("\tdimensions ntax=", ntax, " nchar=", nchar, ";",
sep = ""),
paste("\tformat datatype=", dt, " missing=", missing,
" gap=-", int, ";", sep = ""),
m
)
}
# assemble NEXUS file:
# --------------------
if ( taxblock ){
nex <- c(header, tb, db)
} else {
nex <- c(header, db)
}
# write NEXUS file
# ----------------
if ( file == "" ) {
cat(nex, sep = "\n")
invisible(nex)
} else {
write(nex, file = file)
}
}
nchar <- ncol(x)
if ( datatype == "distances" ){
ntax <- attr(x, "Size")
taxnames <- labels(x)
} else {
ntax <- nrow(x)
taxnames <- rownames(x)
}
taxnames
ws <- nchar(taxnames)
ws <- max(ws) - ws
ws <- lapply(ws, function(x) paste(rep(" ", x), collapse = ""))
taxnames <- paste(taxnames, ws, sep = "")
taxnames
int <- ifelse(is.numeric(interleave), " interleave", "")
interleave = FALSE
int <- ifelse(is.numeric(interleave), " interleave", "")
pt <- seq(from = 1, to = nchar, by = interleave)
nchar
pt <- seq(from = 1, to = nchar, by = interleave)
by
interleave
int
interleave <- nchar
interleave
if (is.numeric(interleave) ){
int <- " interleave"
} else {
int <- ""
interleave <- nchar
}
pt <- seq(from = 1, to = nchar, by = interleave)
pt <- data.frame(from = pt, to = c(pt[-1] - 1, nchar))
pt
source('~/r/pkgs/ips/R/write.nex.R')
mrbayes(x, file = "", ngen = 100, run = FALSE)
source('~/r/pkgs/ips/R/write.nex.R')
library(ips)
data(ips.cox1)
x <- ips.cox1[, 100:139] # tiny alignment
mrbayes(x, file = "", ngen = 100, run = FALSE)
data(ips.cox1)
x <- ips.cox1[1:4, 100:139] # tiny alignment
# print NEXUS file with MrBayes block to working directory
# --------------------------------------------------------
mrbayes(x, file = "", ngen = 100, run = FALSE)
updateMyPackages("ips")
library(Roxalis)
updateMyPackages("ips", win = TRUE)
updateMyPackage("ips", win = TRUE)
pdfStripTitlepage("RennerRicklefs1995")
pdfMeta("RennerRicklefs1995")
pdfMeta("Ricklefs2007")
pdfMeta("Ricklefs2006")
library(Roxalis)
pdfMeta("HarrisonCornell2008")
pdfMeta("MayfieldLevine2010")
taxon
taxon-class
?prune.phylo.rank
?prune.phylo.rank
library(megaptera)
?prune.phylo.rank
library(Roxalis)
updateMyPackage("megaptera", win = TRUE)
pdfMeta("HuaWiens2013")
pdfStripTitlepage("HuaWiens2013")
pdfStripTitlepage("SauquetSavolainen2009")
pdfMeta("SauquetSavolainen2009")
install.packages("Geomorph")
install.packages("geomorph")
library(geomorph)
?geomorph
pdfMeta("HuaWiens2013")
pdfMeta("Claude2008")
pdfMeta("Claude2008")
pdfMeta("HuaWiens2013")
library(Roxalis)
pdfMeta("FitzJohnOtto2009")
pdfMeta("GoldbergRee2011")
pdfMeta("BrockAlfaro2011")
pdfMeta("CusimanoRenner2012")
pdfMeta("CusimanoRenner2010")
library(Roxalis)
pdfMeta("ViscosiGardini2011")
pdfMeta("ViscosiCardini2011")
updateMyPackage("megaptera")
library(Roxalis)
pdfMeta("HarveyNee1994")
pdfMeta("NeeHarvey1992")
pdfStripTitlepage("HarveyNee1994")
pdfStripTitlepage("Rabosky2010")
pdfMeta("Rabosky2010")
pdfMeta("Paradis2003")
pdfMeta("Paradis2004")
pdfMeta("Raup1985")
pdfStripTitlepage("Raup1985")
pdfMeta("Raup1985")
x <- 1:100
y <- 2.1817^x
plot(y ~ y)
e
euler
log(1)
ln(1)
?log
log(2)
log(1)
log(0)
plot(y ~ y)
plot(y ~ x)
y <- 1.5^x
plot(y ~ x)
y <- 1.1^x
plot(y ~ x)
y <- 1.1^-x
plot(y ~ x)
plot(y ~ -x)
plot(y ~ x)
plot(y ~ -x)
x
-x
x <- -x
y <- 1.1^x
plot(y ~ x)
library(Roxalis)
updateMyPackage("megaptera")
library(Roxalis)
pdfMeta("MagriniScoppola2010")
pdfMeta("NetoSamal2006")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC")
library(Roxalis)
detRevConf("articulata", "CONC")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany")
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", date = "2015-05-26", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
date()
?date
Sys.Date
Sys.Date()
source('~/r/pkgs/Roxalis/R/detRevConf.R')
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
Sys.Date()
as.character(Sys.Date())
source('~/r/pkgs/Roxalis/R/detRevConf.R')
as.character(Sys.Date())
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
if ( missing(date) ) date <- as.character(Sys.Date())
conn <- dbConnect(PostgreSQL(), user = "postgres",
dbname = "oxalis",
password = "oxalis")
SQL <- paste("SELECT spec, det_as, herb, num ",
"FROM specimens ",
"WHERE spec = '", spec, "'",
"AND herb = '", herb, "'", sep = "")
d <- dbGetQuery(conn, SQL)
dbDisconnect(conn)
d$spec <- paste("Oxalis", d$spec)
d$action <- "rev."
d$action[d$det_as %in% spec] < "conf."
d$action[d$det_as %in% "indet"] < "det."
d
spec <- "articulata"
herb = "CONC"
conn <- dbConnect(PostgreSQL(), user = "postgres",
dbname = "oxalis",
password = "oxalis")
SQL <- paste("SELECT spec, det_as, herb, num ",
"FROM specimens ",
"WHERE spec = '", spec, "'",
"AND herb = '", herb, "'", sep = "")
d <- dbGetQuery(conn, SQL)
dbDisconnect(conn)
d$spec <- paste("Oxalis", d$spec)
d$action <- "rev."
d$action[d$det_as %in% spec] < "conf."
d$action[d$det_as %in% "indet"] < "det."
d$action[d$det_as %in% spec] <- "conf."
d$action[d$det_as %in% "indet"] <- "det."
d
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
i
even(2)
1 %% 2
2 %% 2
4 %% 2
5 %% 2
5 %% 2 == 0
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "jacq.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Jacq.")
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Savigny")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Savigny")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("articulata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Savigny")
detRevConf("pes-caprae", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "L.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("pes-caprae", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "L.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
library(Roxalis)
detRevConf("cinerea", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Zucc.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("cinerea", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Zucc.")
detRevConf("clandestina", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("clandestina", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
detRevConf("squamata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Zucc.")
detRevConf("squarrosa", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Barn\'eoud")
detRevConf("squarrosa", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("strictula", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Steud.")
detRevConf("valdiviensis", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("gigantea", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("virgosa", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Molina")
detRevConf("bulbocastanum", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
detRevConf("pachyrrhiza", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Wedd.")
detRevConf("megalorrhiza", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Jacq.")
detRevConf("tortuosa", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Lindl.")
source('~/r/pkgs/Roxalis/R/detRevConf.R')
detRevConf("corniculata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("dumetorum", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
library(Roxalis)
detRevConf("arbuscula", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("corniculata", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("corniculata", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("pes-caprae", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("purpurea", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("purpurea", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("dumetorum", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("squamata", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Zucc.")
detRevConf("valdiviensis", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("clandestina", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
detRevConf("squarrosa", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("cinerea", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Zucc.")
detRevConf("dumetorum", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("pes-caprae", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("arbuscula", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Barn\\'eoud")
detRevConf("virgosa", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Molina")
detRevConf("ornithopus", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
detRevConf("tortuosa", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Lindl.")
detRevConf("bulbocastanum", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
detRevConf("morenoensis", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Lourteig")
detRevConf("leucophylla", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
detRevConf("atacamensis", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Reiche")
detRevConf("atacamensis", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Reiche")
detRevConf("pachyrrhiza", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Wedd.")
detRevConf("megalorrhiza", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Jacq.")
detRevConf("novemfoliolata", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Heibl et Martic.")
detRevConf("incana", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Phil.")
detRevConf("strictula", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Steud.")
detRevConf("gyrorhiza", "SGO", loc = "Technical University Munich (TUM), Germany", authority = "Bertero")
detRevConf("gyrorhiza", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Bertero")
detRevConf("corniculata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("gyrorhiza", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Bertero")
detRevConf("corniculata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "L.")
detRevConf("gyrorhiza", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "Bertero")
detRevConf("corniculata", "CONC", loc = "Technical University Munich (TUM), Germany", authority = "L.")
?dbPars
library(megaptera)
?dbPars
?dbPars-class
?class-dbPars
?dbPars
?dbPars-class
help("dbPars-class")
library(megaptera)
?dbPars
?dbConnect
library(megaptera)
?dbPars
library(megaptera)
?dbPars
library(megaptera)
dir <- ifelse(Sys.info()["nodename"] == "Hannos-iMac.local",
"~/Documents/r/araneae/data",
"~/r/araneae/data"); setwd(dir)
## taxonomic information
## ---------------------
tax <- taxon(ingroup = "Araneae",
outgroup = "Amblypygi",
kingdom = "Metazoa",
reference.rank = "ord")
## database parameters
## -------------------
db <- dbPars(dbname = tax@ingroup, password = "oxalis")
## additional software
## -------------------
mafft.exe <- "/usr/local/bin/mafft"
gblocks.exe <- "/Applications/Gblocks_0.91b/Gblocks"
x <- megapteraProj(db = db,
taxon = tax,
align.exe = mafft.exe,
mask.exe = gblocks.exe,
locus = locus(),
update = TRUE)
x
x <- megapteraProj(db = db,
taxon = tax,
align.exe = mafft.exe,
mask.exe = gblocks.exe,
#               locus = locus(),
update = TRUE)
source('~/r/pkgs/megaptera/R/class-megapteraProj.R')
x <- megapteraProj(db = db,
taxon = tax,
align.exe = mafft.exe,
mask.exe = gblocks.exe,
#               locus = locus(),
update = TRUE)
source('~/r/pkgs/megaptera/R/class-megapteraProj.R')
source('~/r/pkgs/megaptera/R/class-megapteraProj.R')
source('~/r/pkgs/megaptera/R/class-megapteraProj.R')
gblocks.exe <- "/Applications/Gblocks_0.91b/Gblocks"
source('~/r/pkgs/megaptera/R/class-megapteraProj.R')
x <- megapteraProj(db = db,
taxon = tax,
align.exe = mafft.exe,
mask.exe = gblocks.exe,
#               locus = locus(),
update = TRUE)
source('~/r/pkgs/megaptera/R/class-megapteraProj.R')
megapteraProj
x <- megapteraProj(db = db,
taxon = tax,
align.exe = mafft.exe,
mask.exe = gblocks.exe,
#               locus = locus(),
update = TRUE)
locus = locus(),
x <- megapteraProj(db = db,
taxon = tax,
align.exe = mafft.exe,
mask.exe = gblocks.exe,
locus = locus(),
update = TRUE)
x
source('~/r/araneae/scripts/0-initialize.R')
source('~/r/pkgs/megaptera/R/class-megapteraProj.R')
x <- megapteraProj(db = db,
taxon = tax,
#                    align.exe = mafft.exe,
#                    mask.exe = gblocks.exe,
locus = locus(),
update = TRUE)
x
x
x <- megapteraProj(db = db,
taxon = tax,
locus = locus())
loci
data(input)
loci
data(input)
loci
loci <- list(locus("cytB", "Cytb"),
locus("cox1", "COI"),
locus("16S"),
locus("RAG1"),
locus("RAG2")
)
loci
?locus
loci <- list(locus("cytB", "Cytb", check = FALSE),
locus("cox1", "COI", check = FALSE),
locus("16S", check = FALSE),
locus("RAG1", check = FALSE),
locus("RAG2", check = FALSE)
)
loci
setwd("~/r/pkgs/megaptera/data")
save(conn, loci, pars, tax, file = "input.rda")
library(R)
library(megaptera)
data(input)
loci
loci[[1]]
